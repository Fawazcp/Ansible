To start this handson lab,you need following resources.


*******************************************************************************************************************
prerequisites

1.	server.cnl.com – 1 CPU – 1GB RAM (Python 2.7) - Ansible Server
2.	node1.cnl.com – 1 CPU – 1GB RAM ( python 2.6 and above) - Ansible Client 1
3.	node2.cnl.com – 1 CPU – 1GB RAM ( python 2.6 and above) - Ansible Client 2

from ansible server login as an ansible user as per class 4.From ansible user execute below command

ansible all -m ping

this above ping command should return with ping / pong green color.

*******************************************************************************************************************
Ansible Factors


ansible all -m setup

1. Think what condition and apply simple linux command
2. Use command module and end of the play next new line use register: <your own name> to capture the output
3. We are beginners.so first print it in jason format output.
4. From that output you decide rquired conditions.in 2 play print success condition message and failure condition message.

*******************************************************************************************************************


Check package is there or not

rpm -qa httpd

---
- name: going to check httpd package
  hosts: node1
  tasks:
   - name: check httpd package is there or not
     command: rpm -qa httpd
     register: checkpackage
   - name: register jason output
     debug:
      var: checkpackage
   - name: print httpd package is not installed
     debug:
      msg: "httpd package is not installed"
     when: checkpackage.stdout == ""
   - name: print httpd has been installed
     debug:
      msg: "httpd package has been installed"
     when: checkpackage.stdout != ""
   - name: install httpd package if httpd is not there
     yum:
      name: httpd
      state: latest
     when: checkpackage.stdout == ""
   - name: check service status
     command: service httpd status
     register: checkservicestatus
     ignore_errors: yes
   - name: print jason output
     debug:
      var: checkservicestatus
   - name: print service is not running
     debug:
      msg: "httpd service is down"
     when: checkservicestatus.rc != 0
   - name: print service is running
     debug:
      msg: "httpd service is running"
     when: checkservicestatus.rc == 0
   - name: start the service if package is installed but service stopped
     service:
      name: httpd
      state: started
     when: checkpackage.stdout != "" and checkservicestatus.rc != 0
